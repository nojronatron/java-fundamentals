/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package inheritance;

import org.junit.jupiter.api.Test;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

import static org.junit.jupiter.api.Assertions.*;

class LibraryTest {
    @Test void testRestaurantToStringFunctionsAsExpected() {
        boolean expectedMatchFound = true;
        String expectedRestaurantName = "McDo's";
        int expectedPriceCategory = 3;

        Restaurant sut = new Restaurant(expectedRestaurantName, expectedPriceCategory);

        Pattern namePattern = Pattern.compile(expectedRestaurantName, Pattern.CASE_INSENSITIVE);
        Matcher nameMatcher = namePattern.matcher(sut.toString());
        boolean nameMatchFound = nameMatcher.find();

        Pattern priceCategoryPattern = Pattern.compile(String.valueOf(expectedPriceCategory), Pattern.CASE_INSENSITIVE);
        Matcher priceCategoryMatcher = priceCategoryPattern.matcher(sut.toString());
        boolean priceCategoryMatchFound = priceCategoryMatcher.find();

        assertEquals(expectedMatchFound, nameMatchFound, "Restaurant constructor should set name property.");
        assertTrue(priceCategoryMatchFound, "Restaurant constructor should set priceCategory property.");
    }

    @Test void testReviewToStringFunctionsAsExpected(){
        String expectedAuthorName = "Alpha";
        String expectedReviewText = "biglongreview";
        int expectedStarsRating = 3;

        Review sut = new Review(expectedAuthorName, expectedReviewText, expectedStarsRating);
        String sutToString = sut.toString();

        Pattern authorNamePattern = Pattern.compile(expectedAuthorName, Pattern.CASE_INSENSITIVE);
        Matcher authorNameMatcher = authorNamePattern.matcher(sutToString);
        boolean authorNameMatchFound = authorNameMatcher.find();

        Pattern reviewTextPattern = Pattern.compile(expectedReviewText, Pattern.CASE_INSENSITIVE);
        Matcher reviewTextMatcher = reviewTextPattern.matcher(sutToString);
        boolean reviewTextMatchFound = reviewTextMatcher.find();

        Pattern starsRatingPattern = Pattern.compile(String.valueOf(expectedStarsRating), Pattern.CASE_INSENSITIVE);
        Matcher starsRatingMatcher = starsRatingPattern.matcher(sutToString);
        boolean starsRatingMatchFound = starsRatingMatcher.find();

        assertTrue(authorNameMatchFound, "Review constructor should set author property.");
        assertTrue(reviewTextMatchFound, "Review constructor should set review body property.");
        assertTrue(starsRatingMatchFound, "Review constructor should set star rating property.");
    }

    @Test void testRestaurantClassAddsReviewsProperly() {
        int expectedReviewCount = 1;
        int expectedReviewCount2 = 2;
        String expectedNameAuthor1 = "Alpha Bravo";
        String expectedReviewText1 = "The burger was yummie.";
        int expectedReviewRating1 = 4;
        String expectedNameAuthor2 = "Charlie Delta";
        String expectedReviewText2 = "Don't buy salad at a burger joint.";
        int expectedReviewRating2 = 2;

        Review review1 = new Review(expectedNameAuthor1, expectedReviewText1, expectedReviewRating1);
        Review review2 = new Review(expectedNameAuthor2, expectedReviewText2, expectedReviewRating2);

        Restaurant mcDonalds = new Restaurant("McDo's", 3);

        assertTrue(mcDonalds.reviews.size() == 0);

        mcDonalds.addReview(review1);

        assertTrue(mcDonalds.reviews.size() == expectedReviewCount);
        System.out.println(mcDonalds.toString());

        mcDonalds.addReview(review2);

        assertTrue(mcDonalds.reviews.size() == expectedReviewCount2);
    }
}
